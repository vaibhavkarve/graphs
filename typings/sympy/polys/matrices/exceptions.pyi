"""
This type stub file was generated by pyright.
"""

"""

Module to define exceptions to be used in sympy.polys.matrices modules and
classes.

Ideally all exceptions raised in these modules would be defined and documented
here and not e.g. imported from matrices. Also ideally generic exceptions like
ValueError/TypeError would not be raised anywhere.

"""
class DMError(Exception):
    """Base class for errors raised by DomainMatrix"""
    ...


class DMBadInputError(DMError):
    """list of lists is inconsistent with shape"""
    ...


class DMDomainError(DMError):
    """domains do not match"""
    ...


class DMNotAField(DMDomainError):
    """domain is not a field"""
    ...


class DMFormatError(DMError):
    """mixed dense/sparse not supported"""
    ...


class DMNonInvertibleMatrixError(DMError):
    """The matrix in not invertible"""
    ...


class DMRankError(DMError):
    """matrix does not have expected rank"""
    ...


class DMShapeError(DMError):
    """shapes are inconsistent"""
    ...


class DMNonSquareMatrixError(DMShapeError):
    """The matrix is not square"""
    ...


class DMValueError(DMError):
    """The value passed is invalid"""
    ...


__all__ = ['DMError', 'DMBadInputError', 'DMDomainError', 'DMFormatError', 'DMRankError', 'DMShapeError', 'DMNotAField', 'DMNonInvertibleMatrixError', 'DMNonSquareMatrixError', 'DMValueError']
